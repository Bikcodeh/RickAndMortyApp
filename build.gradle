// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

    ext {

        //SDK & Tools
        minSdkVersion = 21
        targetSdkVersion = 29
        compileSdkVersion = 29
        versionCode = 1
        versionName = "1.0"

        //versions
        jUnit_version = "4.13"
        ktx_version = "1.3.2"
        appCompat_version = "1.2.0"
        koin_version= "2.2.1"
        room_version = '2.2.5'
        rxKotlin_version = '2.3.0'
        rxAndroid_version = '2.1.1'
        constraintLayout_version = "2.0.4"
        recyclerview_version = "1.1.0"
        materialDesign_version = "1.2.1"
        ktxLifecycle_version = "2.2.0"
        retrofit_version = "2.9.0"
        retrofitAdapterRxJava_version = "2.6.0"
        logginInterceptor_version = "4.5.0"
        picasso_version = "2.71828"
        circleImage_version = "3.1.0"
        mockitoCore_version = "1.10.19"
        coreTesting_version = "1.0.0"
        coreTestingRoom_version = "1.0.0"
        swipeRefreshLayout_version = "1.1.0"

        //test implementations
        jUnitImplementation_version = "1.1.2"
        espressoImplementation_version = "3.3.0"

        //Libraries

        //Kotlin
        kotlinLib = "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

        //KTX
        ktxLib = "androidx.core:core-ktx:$ktx_version"

        //Material Design
        materialDesignLib = "com.google.android.material:material:$materialDesign_version"

        //Testing
        jUnitLib = "junit:junit:$jUnit_version"
        jUnitExtLib = "androidx.test.ext:junit:$jUnitImplementation_version"
        coreTestingLib = "android.arch.core:core-testing:$coreTesting_version"
        coreTestingRoomLib = "android.arch.core:core-testing:$coreTestingRoom_version"

        //Espreso
        espressoCoreLib = "androidx.test.espresso:espresso-core:$espressoImplementation_version"

        //Koin
        koinAndroidLib = "org.koin:koin-android:$koin_version"
        koinScopeLib = "org.koin:koin-androidx-scope:$koin_version"
        koinViewModelLib = "org.koin:koin-androidx-viewmodel:$koin_version"

        //Retrofit
        retrofitLib = "com.squareup.retrofit2:retrofit:$retrofit_version"
        gsonConverterLib = "com.squareup.retrofit2:converter-gson:$retrofit_version"
        logginInterceptorLib = "com.squareup.okhttp3:logging-interceptor:$logginInterceptor_version"
        retrofitAdapterRxJavaLib = "com.squareup.retrofit2:adapter-rxjava2:$retrofitAdapterRxJava_version"

        //KTX Lifecycle
        ktxViewModelLifecycleLib = "androidx.lifecycle:lifecycle-viewmodel-ktx:$ktxLifecycle_version"
        ktxLivedataLifecycleLib = "androidx.lifecycle:lifecycle-livedata-ktx:$ktxLifecycle_version"

        //Room
        roomRuntimeLib = "androidx.room:room-runtime:$room_version"
        roomRxJava = "androidx.room:room-rxjava2:$room_version"
        roomCompilerLib = "androidx.room:room-compiler:$room_version"

        //Rx
        rxKotlinLib = "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version"
        rxJavaLib = "io.reactivex.rxjava2:rxandroid:$rxAndroid_version"

        //Picasso
        picassoLib = "com.squareup.picasso:picasso:$picasso_version"

        circleImageLib = "de.hdodenhof:circleimageview:$circleImage_version"

        //Mockito
        mockitoCoreLib = "org.mockito:mockito-core:$mockitoCore_version"

        //views
        appCompatLib = "androidx.appcompat:appcompat:$appCompat_version"
        constraintLayoutLib = "androidx.constraintlayout:constraintlayout:$constraintLayout_version"
        recyclerviewLib = "androidx.recyclerview:recyclerview:$recyclerview_version"
        swipeRefreshLayoutLib = "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayout_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}